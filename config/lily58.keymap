/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    tapping-term-ms = <120>;
    quick-tap-ms = <100>;
    hold-while-undecided;
};

/ {
    behaviors {
        minus_under: minus_under {
            compatible = "zmk,behavior-tap-dance";
            label = "MINUS_UNDER";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp LS(MINUS)>;

            tapping-term-ms = <200>;
        };

        plus_equal: plus_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "PLUS_EQUAL";
            #binding-cells = <0>;
            bindings = <&kp EQUAL>, <&kp LS(EQUAL)>;

            tapping-term-ms = <200>;
        };

        bracket_left: bracket_left {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp LS(LEFT_BRACKET)>;

            tapping-term-ms = <200>;
        };

        bracket_right: bracket_right {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKET_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET>, <&kp LS(RIGHT_BRACKET)>;

            tapping-term-ms = <200>;
        };

        TD_MO1: TD_MO1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_MO1";
            #binding-cells = <0>;
            bindings = <&mo 1>, <&kp LA(LC(LEFT_SHIFT))>;

            tapping-term-ms = <250>;
        };

        TD_Shift_CWord: TD_Shift_CWord {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_SHIFT_CWORD";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&caps_word>;
        };

        TD_TO3: TD_TO3 {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_TO3";
            #binding-cells = <0>;
            bindings = <&mo 2>, <&to 3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CMB_PLUS {
            bindings = <&kp PLUS>;
            key-positions = <14 15>;
            layers = <0>;
        };

        CMB_MINUS {
            bindings = <&kp MINUS>;
            key-positions = <15 16>;
            layers = <0>;
        };

        CMB_EQUALS {
            bindings = <&kp EQUAL>;
            key-positions = <16 17>;
            layers = <0>;
        };

        CMB_LEFT_PAREN {
            bindings = <&kp LS(LEFT_PARENTHESIS)>;
            key-positions = <26 27>;
            layers = <0>;
        };

        CMB_RIGHT_PAREN {
            bindings = <&kp LS(RIGHT_PARENTHESIS)>;
            key-positions = <38 39>;
            layers = <0>;
        };

        CMB_LEFT_BRACKET {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <27 28>;
            layers = <0>;
        };

        CMB_RIGHT_BRACKET {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <39 40>;
            layers = <0>;
        };

        CMB_LEFT_BRACE {
            bindings = <&kp LS(LEFT_BRACE)>;
            key-positions = <28 29>;
            layers = <0>;
        };

        CMB_RIGHT_BRACE {
            bindings = <&kp LS(RIGHT_BRACE)>;
            key-positions = <40 41>;
            layers = <0>;
        };

        CMB_GRAVE {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
            layers = <0>;
        };

        CMB_TILDE {
            bindings = <&kp TILDE>;
            key-positions = <12 13>;
            layers = <0>;
        };

        CMB_ESC {
            bindings = <&kp ESCAPE>;
            key-positions = <24 25>;
        };

        CMB_PIPE {
            bindings = <&kp PIPE>;
            key-positions = <37 38>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSP  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // |  (    |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | ENTER |
            //                     | GUI  | ALT  | LOWER|  SPACE |  | ENTER | RAISE|   -   |   +   |

            display-name = "Base";
            bindings = <
&kp ESCAPE      &kp N1  &kp N2  &kp N3         &kp N4        &kp N5                                     &kp N6   &kp N7        &kp N8       &kp N9   &kp N0    &kp BACKSPACE
&kp TAB         &kp Q   &kp W   &kp E          &kp R         &kp T                                      &kp Y    &kp U         &kp I        &kp O    &kp P     &kp BACKSLASH
&kp LEFT_SHIFT  &kp A   &kp S   &kp D          &kp F         &kp G                                      &kp H    &kp J         &kp K        &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z   &kp X   &kp C          &kp V         &kp B    &bracket_left    &bracket_right   &kp N    &kp M         &kp COMMA    &kp DOT  &kp FSLH  &kp ENTER
                                &kp LEFT_META  &kp LEFT_ALT  &TD_MO1  &kp SPACE        &TD_Shift_CWord  &TD_TO3  &minus_under  &plus_equal
            >;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | F1  | F2  |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  | DEL   |
            // |  TAB  |  0  | UP  | RET  |  =   |  F6  |                   |  Y   |  _    |  I    |  O   |       |  F12  |
            // |   `   |LEFT |DOWN |RIGHT |  -   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |BKSP | DEL |      |      |      |  F11  |  F12      |      |  -    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      | BKSP  |  _        |      |       |       |

            display-name = "Lower";
            bindings = <
&kp GRAVE  &kp F1    &kp F2    &kp F3                  &kp F4                      &kp F5                                &kp F6         &kp F7             &kp F8          &kp F9          &kp F10          &kp DEL
&trans     &kp N0    &kp UP    &kp RET                 &kp EQUAL                   &kp TILDE                             &none          &kp UNDERSCORE     &kp INSERT      &kp SCROLLLOCK  &kp PRINTSCREEN  &none
&trans     &kp LEFT  &kp DOWN  &kp RIGHT               &kp MINUS                   &kp GRAVE                             &kp HOME       &kp PAGE_DOWN      &kp PAGE_UP     &kp END         &kp CAPSLOCK     &none
&trans     &kp BSPC  &kp DEL   &kp LC(LA(LEFT_SHIFT))  &kp LC(LG(LA(LEFT_SHIFT)))  &kp F13    &kp F11     &kp F12        &none          &kp K_APPLICATION  &kp C_PREVIOUS  &kp C_NEXT      &kp C_PAUSE      &kp KP_ENTER
                               &trans                  &trans                      &trans     &kp BSPC    &kp LS(UNDER)  &kp LEFT_META  &kp LEFT_ALT       &kp RCTRL
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR  |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |  EP_ON| EP_OFF|

            display-name = "Raise";
            bindings = <
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_SEL 3  &bt BT_SEL 4                     &kp KP_NUMLOCK  &kp N7            &kp N8             &kp N9   &kp KP_MINUS  &kp BACKSPACE
&trans          &kp LS(EXCL)   &kp LS(AT)    &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)                    &kp PERCENT     &kp N4            &kp N5             &kp N6   &kp KP_PLUS   &kp KP_DIVIDE
&trans          &kp LS(CARET)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)  &kp LS(RPAR)                     &none           &kp N1            &kp N2             &kp N3   &kp KP_MINUS  &kp KP_MULTIPLY
&trans          &none          &none         &none          &none         &none          &trans    &trans  &none           &kp N0            &kp N0             &kp DOT  &kp KP_ENTER  &kp KP_ENTER
                                             &trans         &trans        &sl 3          &trans    &trans  &trans          &ext_power EP_ON  &ext_power EP_OFF
            >;
        };

        SL_3 {
            bindings = <
&trans  &kp LA(F1)  &kp LA(F2)  &kp LA(F3)  &kp LA(F4)  &kp LA(F5)                    &kp LS(KP_NUMLOCK)  &kp N7     &kp N8   &kp N9   &kp KP_SUBTRACT  &trans
&trans  &trans      &trans      &trans      &trans      &trans                        &kp PERCENT         &kp N4     &kp N5   &kp N6   &kp KP_PLUS      &kp KP_DIVIDE
&trans  &trans      &trans      &trans      &trans      &trans                        &none               &kp N1     &kp N2   &kp N3   &kp KP_MINUS     &kp KP_MULTIPLY
&trans  &trans      &trans      &trans      &trans      &trans      &trans    &trans  &none               &kp N0     &kp N0   &kp DOT  &kp KP_ENTER     &kp KP_ENTER
                                &trans      &trans      &trans      &trans    &trans  &to 0               &kp SPACE  &kp TAB
            >;
        };
    };
};

// Disable I2C to prevent SPI/I2C conflict (must be last to override lily58.dtsi)

&pro_micro_i2c { status = "disabled"; };
